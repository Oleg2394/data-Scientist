#!/usr/bin/env python
# coding: utf-8

# # Библиотека `NumPy` (часть 1)

# ### Урок 3.2: Примеры использования

# В этом уроке мы познакомимся с библиотекой `NumPy` (сокращение от *Numeric Python*), которая часто используется в задачах, связанных с машинным обучением и построением статистических моделей.
# 
# Чтобы мы смогли на конкретных примерах увидеть, зачем эта библиотека используется, давайте её импортируем. Если вы уже устанавливали Anaconda, то библиотека `numpy` также была установлена на ваш компьютер. Проверим:

# In[1]:


import numpy as np


# В коде выше мы импортировали библиотеку с сокращённым названием, так часто делают, чтобы не «таскать» за собой в коде длинное название. Сокращение `np` для библиотеки `numpy` – распространённое, можно даже сказать, общепринятое, его часто можно увидеть в документации или официальных тьюториалах.

# **Для чего именно может понадобиться библиотека `NumPy`?**
# 
# Во-первых, для базовых вычислений: в `NumPy` тоже есть функции для математических операций (квадратный корень, логарифм и другие). Посмотрим на несколько примеров:

# In[2]:


np.sqrt(17)  # квадратный корень 


# In[3]:


np.log(4)  # натуральный логарифм


# Во-вторых, для более серьёзных вычислений, например, статистических. Найдём среднее арифметическое набора значений – в Python такой набор называется списком и записывается в квадратных скобках. Чтобы было интереснее, давайте считать, что этот список содержит заработную плату шести человек, измеренную в тысячах рублей.

# In[4]:


np.mean([20, 40, 30, 450, 45, 30])  # среднее


# Или медиану – значение, которое стоит ровно посередине списка, если упорядочить его значения по возрастанию (в случае чётного числа элементов будет считаться среднее арифметическое двух чисел, которые находятся посередине). 

# In[5]:


np.median([20, 40, 30, 450, 45, 30])  # медиана


# Почему приведённый выше пример интересен? Дело в том, что в при наличии нетипичных (слишком маленьких или слишком больших значений в наборе), среднее арифметическое плохо отражает реальное положение дел, поэтому более корректно для описания среднего значения использовать медиану. В нашем примере медианное значение 35 явно более правдиво описывает список значений, чем значение 102.5, которое получилось таким большим ровно из-за слишком высокой заработной платы одного человека.

# В-третьих, главная структура данных при работе с `NumPy` – это массивы (*numpy arrays*). Массив – это очень удобная структура для хранения данных, а в чём заключается удобство, мы узнаем в следующем уроке.
